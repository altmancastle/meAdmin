[{"/Users/hanbiao/workplace/me_admin/src/App.tsx":"1","/Users/hanbiao/workplace/me_admin/src/Layout/me-menu/icon.tsx":"2","/Users/hanbiao/workplace/me_admin/src/Layout/me-sider/index.tsx":"3","/Users/hanbiao/workplace/me_admin/src/Layout/me-header/index.tsx":"4","/Users/hanbiao/workplace/me_admin/src/index.tsx":"5"},{"size":672,"mtime":1610414941951,"results":"6","hashOfConfig":"7"},{"size":373,"mtime":1610414826173,"results":"8","hashOfConfig":"7"},{"size":435,"mtime":1610415329319,"results":"9","hashOfConfig":"7"},{"size":1302,"mtime":1610415309861,"results":"10","hashOfConfig":"7"},{"size":640,"mtime":1610415272232,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},"scfp2m",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hanbiao/workplace/me_admin/src/App.tsx",["25"],"import React from \"react\";\nimport LayoutContent from \"./Layout\";\nimport {\n  Menu\n} from \"./utils/permission\";\nimport { PrivateRoute } from \"./config/router.config\";\n\ninterface Permission {\n  initRoute: PrivateRoute[];\n  initMenu: Menu[];\n  initPermission: string[];\n}\n\nconst Permission: Permission = {\n  initRoute: [],\n  initMenu: [],\n  initPermission: [],\n};\n\nexport const PermissinContext = React.createContext(Permission);\n\nconst App = () => {\n  \n  // const [permission,setPermission] = useState<Permission>(Permission)\n\n  return (\n    <PermissinContext.Provider value={Permission}>\n      <LayoutContent />\n    </PermissinContext.Provider>\n  );\n};\n\nexport default App;\n",["26","27"],"/Users/hanbiao/workplace/me_admin/src/Layout/me-menu/icon.tsx",[],"/Users/hanbiao/workplace/me_admin/src/Layout/me-sider/index.tsx",[],"/Users/hanbiao/workplace/me_admin/src/Layout/me-header/index.tsx",["28"],"import React, { useState } from \"react\";\nimport { Layout, Menu, Dropdown } from \"antd\";\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  BellOutlined,\n  LoginOutlined,\n} from \"@ant-design/icons\";\n\nconst { Header } = Layout;\n\nconst MeHeader = (props: any) => {\n\n  const [collapsed, setCollapsed] = useState(false);\n\n  const [userInfo, setUserInfo] = useState<any>();\n\n  const handleLogout = () => {\n    // Dispatcher.next({type:ActionTypes.LOGOUT})\n  };\n\n  const menu = (\n    <Menu>\n      <Menu.Item>\n        <span onClick={() => handleLogout()}>\n          <LoginOutlined style={{ marginRight: \"5px\" }} /> 退出登录\n        </span>\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <Header\n      style={{ padding: 0 }}\n    >\n      {collapsed ? (\n        <MenuUnfoldOutlined\n          onClick={() => setCollapsed(!collapsed)}\n        />\n      ) : (\n        <MenuFoldOutlined\n          onClick={() => setCollapsed(!collapsed)}\n        />\n      )}\n      <div>\n        <BellOutlined style={{ marginRight: \"30px\" }} />\n        <Dropdown overlay={menu}>\n          <span onClick={(e) => e.preventDefault()}>\n            <img width=\"24\" alt=\"avatar\" />\n            {userInfo && userInfo[\"family_name\"]}\n          </span>\n        </Dropdown>\n      </div>\n    </Header>\n  );\n};\n\nexport default MeHeader;\n","/Users/hanbiao/workplace/me_admin/src/index.tsx",[],{"ruleId":"29","severity":1,"message":"30","line":14,"column":7,"nodeType":"31","messageId":"32","endLine":14,"endColumn":29},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":16,"column":20,"nodeType":"31","messageId":"39","endLine":16,"endColumn":31},"@typescript-eslint/no-redeclare","'Permission' is already defined.","Identifier","redeclared","no-native-reassign",["40"],"no-negated-in-lhs",["41"],"@typescript-eslint/no-unused-vars","'setUserInfo' is assigned a value but never used.","unusedVar","no-global-assign","no-unsafe-negation"]